# Generated from RALexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,52,526,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,
        7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,
        2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,
        7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,
        2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,
        7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,
        2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,
        7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,
        2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,
        7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,
        2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,
        7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,
        2,78,7,78,1,0,4,0,162,8,0,11,0,12,0,163,1,0,1,0,1,1,1,1,1,1,1,1,
        1,1,5,1,173,8,1,10,1,12,1,176,9,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,
        2,1,2,5,2,187,8,2,10,2,12,2,190,9,2,1,2,1,2,1,2,1,2,1,3,1,3,1,4,
        1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,8,1,8,
        1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,11,1,11,1,
        11,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,3,13,239,8,13,1,
        13,5,13,242,8,13,10,13,12,13,245,9,13,1,13,1,13,1,14,5,14,250,8,
        14,10,14,12,14,253,9,14,1,14,3,14,256,8,14,1,14,4,14,259,8,14,11,
        14,12,14,260,1,15,1,15,5,15,265,8,15,10,15,12,15,268,9,15,1,16,1,
        16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,
        17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,
        19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,
        21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,
        23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,
        24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,
        30,1,31,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,34,1,35,1,35,1,
        36,1,36,1,36,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,
        40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,
        45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,
        47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,
        48,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,
        50,1,50,1,50,1,50,1,50,1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,1,
        55,1,55,1,56,1,56,1,57,1,57,1,58,1,58,1,59,1,59,1,60,1,60,1,61,1,
        61,1,62,1,62,1,63,1,63,1,64,1,64,1,65,1,65,1,66,1,66,1,67,1,67,1,
        68,1,68,1,69,1,69,1,70,1,70,1,71,1,71,1,72,1,72,1,73,1,73,1,74,1,
        74,1,75,1,75,1,76,1,76,1,77,4,77,485,8,77,11,77,12,77,486,1,78,3,
        78,490,8,78,1,78,1,78,1,78,1,78,3,78,496,8,78,1,78,5,78,499,8,78,
        10,78,12,78,502,9,78,1,78,1,78,1,78,1,78,3,78,508,8,78,1,78,5,78,
        511,8,78,10,78,12,78,514,9,78,1,78,1,78,5,78,518,8,78,10,78,12,78,
        521,9,78,1,78,1,78,1,78,1,78,3,174,188,519,0,79,2,1,4,2,6,3,8,4,
        10,5,12,6,14,7,16,8,18,9,20,10,22,11,24,12,26,13,28,14,30,15,32,
        16,34,17,36,18,38,19,40,20,42,21,44,22,46,23,48,24,50,25,52,26,54,
        27,56,28,58,29,60,30,62,31,64,32,66,33,68,34,70,35,72,36,74,37,76,
        38,78,39,80,40,82,41,84,42,86,43,88,44,90,45,92,46,94,47,96,48,98,
        49,100,50,102,51,104,0,106,0,108,0,110,0,112,0,114,0,116,0,118,0,
        120,0,122,0,124,0,126,0,128,0,130,0,132,0,134,0,136,0,138,0,140,
        0,142,0,144,0,146,0,148,0,150,0,152,0,154,0,156,0,158,52,2,0,1,32,
        3,0,9,10,13,13,32,32,3,0,10,10,13,13,39,39,3,0,65,90,95,95,97,122,
        4,0,48,57,65,90,95,95,97,122,2,0,65,65,97,97,2,0,66,66,98,98,2,0,
        67,67,99,99,2,0,68,68,100,100,2,0,69,69,101,101,2,0,70,70,102,102,
        2,0,71,71,103,103,2,0,72,72,104,104,2,0,73,73,105,105,2,0,74,74,
        106,106,2,0,75,75,107,107,2,0,76,76,108,108,2,0,77,77,109,109,2,
        0,78,78,110,110,2,0,79,79,111,111,2,0,80,80,112,112,2,0,81,81,113,
        113,2,0,82,82,114,114,2,0,83,83,115,115,2,0,84,84,116,116,2,0,85,
        85,117,117,2,0,86,86,118,118,2,0,87,87,119,119,2,0,88,88,120,120,
        2,0,89,89,121,121,2,0,90,90,122,122,3,0,10,10,13,13,34,34,2,0,34,
        34,39,39,520,0,2,1,0,0,0,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,
        1,0,0,0,0,12,1,0,0,0,0,14,1,0,0,0,0,16,1,0,0,0,0,18,1,0,0,0,0,20,
        1,0,0,0,0,22,1,0,0,0,0,24,1,0,0,0,0,26,1,0,0,0,0,28,1,0,0,0,0,30,
        1,0,0,0,0,32,1,0,0,0,0,34,1,0,0,0,0,36,1,0,0,0,0,38,1,0,0,0,0,40,
        1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,0,46,1,0,0,0,0,48,1,0,0,0,0,50,
        1,0,0,0,0,52,1,0,0,0,0,54,1,0,0,0,0,56,1,0,0,0,0,58,1,0,0,0,0,60,
        1,0,0,0,0,62,1,0,0,0,0,64,1,0,0,0,0,66,1,0,0,0,0,68,1,0,0,0,0,70,
        1,0,0,0,0,72,1,0,0,0,0,74,1,0,0,0,0,76,1,0,0,0,0,78,1,0,0,0,0,80,
        1,0,0,0,0,82,1,0,0,0,0,84,1,0,0,0,0,86,1,0,0,0,0,88,1,0,0,0,0,90,
        1,0,0,0,0,92,1,0,0,0,0,94,1,0,0,0,0,96,1,0,0,0,0,98,1,0,0,0,0,100,
        1,0,0,0,0,102,1,0,0,0,1,158,1,0,0,0,2,161,1,0,0,0,4,167,1,0,0,0,
        6,182,1,0,0,0,8,195,1,0,0,0,10,197,1,0,0,0,12,199,1,0,0,0,14,203,
        1,0,0,0,16,209,1,0,0,0,18,212,1,0,0,0,20,217,1,0,0,0,22,222,1,0,
        0,0,24,226,1,0,0,0,26,229,1,0,0,0,28,233,1,0,0,0,30,251,1,0,0,0,
        32,262,1,0,0,0,34,269,1,0,0,0,36,277,1,0,0,0,38,286,1,0,0,0,40,294,
        1,0,0,0,42,300,1,0,0,0,44,307,1,0,0,0,46,314,1,0,0,0,48,320,1,0,
        0,0,50,331,1,0,0,0,52,337,1,0,0,0,54,339,1,0,0,0,56,341,1,0,0,0,
        58,343,1,0,0,0,60,345,1,0,0,0,62,347,1,0,0,0,64,349,1,0,0,0,66,352,
        1,0,0,0,68,354,1,0,0,0,70,356,1,0,0,0,72,359,1,0,0,0,74,361,1,0,
        0,0,76,364,1,0,0,0,78,366,1,0,0,0,80,369,1,0,0,0,82,372,1,0,0,0,
        84,375,1,0,0,0,86,377,1,0,0,0,88,379,1,0,0,0,90,381,1,0,0,0,92,387,
        1,0,0,0,94,394,1,0,0,0,96,400,1,0,0,0,98,408,1,0,0,0,100,414,1,0,
        0,0,102,420,1,0,0,0,104,431,1,0,0,0,106,433,1,0,0,0,108,435,1,0,
        0,0,110,437,1,0,0,0,112,439,1,0,0,0,114,441,1,0,0,0,116,443,1,0,
        0,0,118,445,1,0,0,0,120,447,1,0,0,0,122,449,1,0,0,0,124,451,1,0,
        0,0,126,453,1,0,0,0,128,455,1,0,0,0,130,457,1,0,0,0,132,459,1,0,
        0,0,134,461,1,0,0,0,136,463,1,0,0,0,138,465,1,0,0,0,140,467,1,0,
        0,0,142,469,1,0,0,0,144,471,1,0,0,0,146,473,1,0,0,0,148,475,1,0,
        0,0,150,477,1,0,0,0,152,479,1,0,0,0,154,481,1,0,0,0,156,484,1,0,
        0,0,158,489,1,0,0,0,160,162,7,0,0,0,161,160,1,0,0,0,162,163,1,0,
        0,0,163,161,1,0,0,0,163,164,1,0,0,0,164,165,1,0,0,0,165,166,6,0,
        0,0,166,3,1,0,0,0,167,168,5,47,0,0,168,169,5,42,0,0,169,174,1,0,
        0,0,170,173,3,4,1,0,171,173,9,0,0,0,172,170,1,0,0,0,172,171,1,0,
        0,0,173,176,1,0,0,0,174,175,1,0,0,0,174,172,1,0,0,0,175,177,1,0,
        0,0,176,174,1,0,0,0,177,178,5,42,0,0,178,179,5,47,0,0,179,180,1,
        0,0,0,180,181,6,1,0,0,181,5,1,0,0,0,182,183,5,47,0,0,183,184,5,47,
        0,0,184,188,1,0,0,0,185,187,9,0,0,0,186,185,1,0,0,0,187,190,1,0,
        0,0,188,189,1,0,0,0,188,186,1,0,0,0,189,191,1,0,0,0,190,188,1,0,
        0,0,191,192,5,10,0,0,192,193,1,0,0,0,193,194,6,2,0,0,194,7,1,0,0,
        0,195,196,5,59,0,0,196,9,1,0,0,0,197,198,5,33,0,0,198,11,1,0,0,0,
        199,200,3,16,7,0,200,201,3,2,0,0,201,202,3,18,8,0,202,13,1,0,0,0,
        203,204,3,16,7,0,204,205,3,2,0,0,205,206,3,26,12,0,206,207,3,2,0,
        0,207,208,3,18,8,0,208,15,1,0,0,0,209,210,3,120,59,0,210,211,3,140,
        69,0,211,17,1,0,0,0,212,213,3,130,64,0,213,214,3,144,71,0,214,215,
        3,126,62,0,215,216,3,126,62,0,216,19,1,0,0,0,217,218,3,126,62,0,
        218,219,3,120,59,0,219,220,3,124,61,0,220,221,3,112,55,0,221,21,
        1,0,0,0,222,223,3,104,51,0,223,224,3,130,64,0,224,225,3,110,54,0,
        225,23,1,0,0,0,226,227,3,132,65,0,227,228,3,138,68,0,228,25,1,0,
        0,0,229,230,3,130,64,0,230,231,3,132,65,0,231,232,3,142,70,0,232,
        27,1,0,0,0,233,243,5,39,0,0,234,242,8,1,0,0,235,236,5,39,0,0,236,
        242,5,39,0,0,237,239,5,13,0,0,238,237,1,0,0,0,238,239,1,0,0,0,239,
        240,1,0,0,0,240,242,5,10,0,0,241,234,1,0,0,0,241,235,1,0,0,0,241,
        238,1,0,0,0,242,245,1,0,0,0,243,241,1,0,0,0,243,244,1,0,0,0,244,
        246,1,0,0,0,245,243,1,0,0,0,246,247,5,39,0,0,247,29,1,0,0,0,248,
        250,3,156,77,0,249,248,1,0,0,0,250,253,1,0,0,0,251,249,1,0,0,0,251,
        252,1,0,0,0,252,255,1,0,0,0,253,251,1,0,0,0,254,256,5,46,0,0,255,
        254,1,0,0,0,255,256,1,0,0,0,256,258,1,0,0,0,257,259,3,156,77,0,258,
        257,1,0,0,0,259,260,1,0,0,0,260,258,1,0,0,0,260,261,1,0,0,0,261,
        31,1,0,0,0,262,266,7,2,0,0,263,265,7,3,0,0,264,263,1,0,0,0,265,268,
        1,0,0,0,266,264,1,0,0,0,266,267,1,0,0,0,267,33,1,0,0,0,268,266,1,
        0,0,0,269,270,5,92,0,0,270,271,5,114,0,0,271,272,5,101,0,0,272,273,
        5,110,0,0,273,274,5,97,0,0,274,275,5,109,0,0,275,276,5,101,0,0,276,
        35,1,0,0,0,277,278,5,92,0,0,278,279,5,112,0,0,279,280,5,114,0,0,
        280,281,5,111,0,0,281,282,5,106,0,0,282,283,5,101,0,0,283,284,5,
        99,0,0,284,285,5,116,0,0,285,37,1,0,0,0,286,287,5,92,0,0,287,288,
        5,115,0,0,288,289,5,101,0,0,289,290,5,108,0,0,290,291,5,101,0,0,
        291,292,5,99,0,0,292,293,5,116,0,0,293,39,1,0,0,0,294,295,5,92,0,
        0,295,296,5,106,0,0,296,297,5,111,0,0,297,298,5,105,0,0,298,299,
        5,110,0,0,299,41,1,0,0,0,300,301,5,92,0,0,301,302,5,99,0,0,302,303,
        5,114,0,0,303,304,5,111,0,0,304,305,5,115,0,0,305,306,5,115,0,0,
        306,43,1,0,0,0,307,308,5,92,0,0,308,309,5,117,0,0,309,310,5,110,
        0,0,310,311,5,105,0,0,311,312,5,111,0,0,312,313,5,110,0,0,313,45,
        1,0,0,0,314,315,5,92,0,0,315,316,5,100,0,0,316,317,5,105,0,0,317,
        318,5,102,0,0,318,319,5,102,0,0,319,47,1,0,0,0,320,321,5,92,0,0,
        321,322,5,105,0,0,322,323,5,110,0,0,323,324,5,116,0,0,324,325,5,
        101,0,0,325,326,5,114,0,0,326,327,5,115,0,0,327,328,5,101,0,0,328,
        329,5,99,0,0,329,330,5,116,0,0,330,49,1,0,0,0,331,332,5,92,0,0,332,
        333,5,97,0,0,333,334,5,103,0,0,334,335,5,103,0,0,335,336,5,114,0,
        0,336,51,1,0,0,0,337,338,5,46,0,0,338,53,1,0,0,0,339,340,5,44,0,
        0,340,55,1,0,0,0,341,342,5,42,0,0,342,57,1,0,0,0,343,344,5,47,0,
        0,344,59,1,0,0,0,345,346,5,43,0,0,346,61,1,0,0,0,347,348,5,45,0,
        0,348,63,1,0,0,0,349,350,5,124,0,0,350,351,5,124,0,0,351,65,1,0,
        0,0,352,353,5,40,0,0,353,67,1,0,0,0,354,355,5,41,0,0,355,69,1,0,
        0,0,356,357,5,95,0,0,357,358,5,123,0,0,358,71,1,0,0,0,359,360,5,
        125,0,0,360,73,1,0,0,0,361,362,5,58,0,0,362,363,5,45,0,0,363,75,
        1,0,0,0,364,365,5,58,0,0,365,77,1,0,0,0,366,367,5,60,0,0,367,368,
        5,61,0,0,368,79,1,0,0,0,369,370,5,60,0,0,370,371,5,62,0,0,371,81,
        1,0,0,0,372,373,5,62,0,0,373,374,5,61,0,0,374,83,1,0,0,0,375,376,
        5,60,0,0,376,85,1,0,0,0,377,378,5,61,0,0,378,87,1,0,0,0,379,380,
        5,62,0,0,380,89,1,0,0,0,381,382,5,92,0,0,382,383,5,108,0,0,383,384,
        5,105,0,0,384,385,5,115,0,0,385,386,5,116,0,0,386,91,1,0,0,0,387,
        388,5,92,0,0,388,389,5,99,0,0,389,390,5,108,0,0,390,391,5,101,0,
        0,391,392,5,97,0,0,392,393,5,114,0,0,393,93,1,0,0,0,394,395,5,92,
        0,0,395,396,5,115,0,0,396,397,5,97,0,0,397,398,5,118,0,0,398,399,
        5,101,0,0,399,95,1,0,0,0,400,401,5,92,0,0,401,402,5,115,0,0,402,
        403,5,111,0,0,403,404,5,117,0,0,404,405,5,114,0,0,405,406,5,99,0,
        0,406,407,5,101,0,0,407,97,1,0,0,0,408,409,5,92,0,0,409,410,5,104,
        0,0,410,411,5,101,0,0,411,412,5,108,0,0,412,413,5,112,0,0,413,99,
        1,0,0,0,414,415,5,92,0,0,415,416,5,113,0,0,416,417,5,117,0,0,417,
        418,5,105,0,0,418,419,5,116,0,0,419,101,1,0,0,0,420,421,5,92,0,0,
        421,422,5,115,0,0,422,423,5,113,0,0,423,424,5,108,0,0,424,425,5,
        101,0,0,425,426,5,120,0,0,426,427,5,101,0,0,427,428,5,99,0,0,428,
        429,1,0,0,0,429,430,6,50,1,0,430,103,1,0,0,0,431,432,7,4,0,0,432,
        105,1,0,0,0,433,434,7,5,0,0,434,107,1,0,0,0,435,436,7,6,0,0,436,
        109,1,0,0,0,437,438,7,7,0,0,438,111,1,0,0,0,439,440,7,8,0,0,440,
        113,1,0,0,0,441,442,7,9,0,0,442,115,1,0,0,0,443,444,7,10,0,0,444,
        117,1,0,0,0,445,446,7,11,0,0,446,119,1,0,0,0,447,448,7,12,0,0,448,
        121,1,0,0,0,449,450,7,13,0,0,450,123,1,0,0,0,451,452,7,14,0,0,452,
        125,1,0,0,0,453,454,7,15,0,0,454,127,1,0,0,0,455,456,7,16,0,0,456,
        129,1,0,0,0,457,458,7,17,0,0,458,131,1,0,0,0,459,460,7,18,0,0,460,
        133,1,0,0,0,461,462,7,19,0,0,462,135,1,0,0,0,463,464,7,20,0,0,464,
        137,1,0,0,0,465,466,7,21,0,0,466,139,1,0,0,0,467,468,7,22,0,0,468,
        141,1,0,0,0,469,470,7,23,0,0,470,143,1,0,0,0,471,472,7,24,0,0,472,
        145,1,0,0,0,473,474,7,25,0,0,474,147,1,0,0,0,475,476,7,26,0,0,476,
        149,1,0,0,0,477,478,7,27,0,0,478,151,1,0,0,0,479,480,7,28,0,0,480,
        153,1,0,0,0,481,482,7,29,0,0,482,155,1,0,0,0,483,485,2,48,57,0,484,
        483,1,0,0,0,485,486,1,0,0,0,486,484,1,0,0,0,486,487,1,0,0,0,487,
        157,1,0,0,0,488,490,3,2,0,0,489,488,1,0,0,0,489,490,1,0,0,0,490,
        491,1,0,0,0,491,519,3,70,34,0,492,500,5,39,0,0,493,499,8,1,0,0,494,
        496,5,13,0,0,495,494,1,0,0,0,495,496,1,0,0,0,496,497,1,0,0,0,497,
        499,5,10,0,0,498,493,1,0,0,0,498,495,1,0,0,0,499,502,1,0,0,0,500,
        498,1,0,0,0,500,501,1,0,0,0,501,503,1,0,0,0,502,500,1,0,0,0,503,
        518,5,39,0,0,504,512,5,34,0,0,505,511,8,30,0,0,506,508,5,13,0,0,
        507,506,1,0,0,0,507,508,1,0,0,0,508,509,1,0,0,0,509,511,5,10,0,0,
        510,505,1,0,0,0,510,507,1,0,0,0,511,514,1,0,0,0,512,510,1,0,0,0,
        512,513,1,0,0,0,513,515,1,0,0,0,514,512,1,0,0,0,515,518,5,34,0,0,
        516,518,8,31,0,0,517,492,1,0,0,0,517,504,1,0,0,0,517,516,1,0,0,0,
        518,521,1,0,0,0,519,520,1,0,0,0,519,517,1,0,0,0,520,522,1,0,0,0,
        521,519,1,0,0,0,522,523,3,72,35,0,523,524,1,0,0,0,524,525,6,78,2,
        0,525,159,1,0,0,0,23,0,1,163,172,174,188,238,241,243,251,255,260,
        266,486,489,495,498,500,507,510,512,517,519,3,6,0,0,5,1,0,4,0,0
    ]

class RALexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    SQLEXEC_MODE = 1

    WS = 1
    COMMENT = 2
    LINE_COMMENT = 3
    TERMINATOR = 4
    FORCE = 5
    IS_NULL = 6
    IS_NOT_NULL = 7
    IS = 8
    NULL = 9
    LIKE = 10
    AND = 11
    OR = 12
    NOT = 13
    STRING = 14
    NUMBER = 15
    ID = 16
    RENAME = 17
    PROJECT = 18
    SELECT = 19
    JOIN = 20
    CROSS = 21
    UNION = 22
    DIFF = 23
    INTERSECT = 24
    AGGR = 25
    DOT = 26
    COMMA = 27
    STAR = 28
    SLASH = 29
    PLUS = 30
    MINUS = 31
    CONCAT = 32
    PAREN_L = 33
    PAREN_R = 34
    ARG_L = 35
    ARG_R = 36
    GETS = 37
    COLON = 38
    LE = 39
    NE = 40
    GE = 41
    LT = 42
    EQ = 43
    GT = 44
    LIST = 45
    CLEAR = 46
    SAVE = 47
    SOURCE = 48
    HELP = 49
    QUIT = 50
    SQLEXEC = 51
    SQLEXEC_TEXT = 52

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "SQLEXEC_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'!'", "'\\rename'", "'\\project'", "'\\select'", "'\\join'", 
            "'\\cross'", "'\\union'", "'\\diff'", "'\\intersect'", "'\\aggr'", 
            "'.'", "','", "'*'", "'/'", "'+'", "'-'", "'||'", "'('", "')'", 
            "'_{'", "'}'", "':-'", "':'", "'<='", "'<>'", "'>='", "'<'", 
            "'='", "'>'", "'\\list'", "'\\clear'", "'\\save'", "'\\source'", 
            "'\\help'", "'\\quit'", "'\\sqlexec'" ]

    symbolicNames = [ "<INVALID>",
            "WS", "COMMENT", "LINE_COMMENT", "TERMINATOR", "FORCE", "IS_NULL", 
            "IS_NOT_NULL", "IS", "NULL", "LIKE", "AND", "OR", "NOT", "STRING", 
            "NUMBER", "ID", "RENAME", "PROJECT", "SELECT", "JOIN", "CROSS", 
            "UNION", "DIFF", "INTERSECT", "AGGR", "DOT", "COMMA", "STAR", 
            "SLASH", "PLUS", "MINUS", "CONCAT", "PAREN_L", "PAREN_R", "ARG_L", 
            "ARG_R", "GETS", "COLON", "LE", "NE", "GE", "LT", "EQ", "GT", 
            "LIST", "CLEAR", "SAVE", "SOURCE", "HELP", "QUIT", "SQLEXEC", 
            "SQLEXEC_TEXT" ]

    ruleNames = [ "WS", "COMMENT", "LINE_COMMENT", "TERMINATOR", "FORCE", 
                  "IS_NULL", "IS_NOT_NULL", "IS", "NULL", "LIKE", "AND", 
                  "OR", "NOT", "STRING", "NUMBER", "ID", "RENAME", "PROJECT", 
                  "SELECT", "JOIN", "CROSS", "UNION", "DIFF", "INTERSECT", 
                  "AGGR", "DOT", "COMMA", "STAR", "SLASH", "PLUS", "MINUS", 
                  "CONCAT", "PAREN_L", "PAREN_R", "ARG_L", "ARG_R", "GETS", 
                  "COLON", "LE", "NE", "GE", "LT", "EQ", "GT", "LIST", "CLEAR", 
                  "SAVE", "SOURCE", "HELP", "QUIT", "SQLEXEC", "A", "B", 
                  "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", 
                  "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", 
                  "Y", "Z", "UNSIGNED_INTEGER_FRAGMENT", "SQLEXEC_TEXT" ]

    grammarFileName = "RALexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


